# =============================================================================
# TikTok Video Scraper Service - Environment Configuration
# =============================================================================
# Copy this file to .env and fill in your actual values
# cp .env.example .env

# -----------------------------------------------------------------------------
# REQUIRED SETTINGS
# -----------------------------------------------------------------------------

# API Key for service authentication (REQUIRED)
# Generate a secure random string for API authentication
# Example: openssl rand -hex 32
API_KEY=your-secure-api-key-here

# OpenAI API Key for thumbnail analysis (REQUIRED)
# Get your API key from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-your-openai-api-key-here

# -----------------------------------------------------------------------------
# SERVER CONFIGURATION
# -----------------------------------------------------------------------------

# Server host and port
HOST=0.0.0.0
PORT=8000

# Development/Production mode
DEBUG_MODE=false

# -----------------------------------------------------------------------------
# VIDEO EXTRACTION SETTINGS
# -----------------------------------------------------------------------------

# TikTok session token (optional - improves extraction reliability)
# You can extract this from your browser's cookies when logged into TikTok
MS_TOKEN=

# Browser to use for TikTok extraction (firefox, chrome, edge)
TIKTOK_BROWSER=firefox

# ScraperAPI key (optional - alternative extraction method)
# Get from: https://www.scraperapi.com/
SCRAPERAPI_KEY=

# -----------------------------------------------------------------------------
# OPTIONAL SETTINGS
# -----------------------------------------------------------------------------

# Maximum concurrent video extractions
MAX_CONCURRENT_EXTRACTIONS=5

# Video extraction timeout (seconds)
EXTRACTION_TIMEOUT=30

# -----------------------------------------------------------------------------
# RATE LIMITING
# -----------------------------------------------------------------------------

# Maximum requests per minute per IP
MAX_REQUESTS_PER_MINUTE=60

# Maximum URLs per batch request
MAX_URLS_PER_BATCH=3

# -----------------------------------------------------------------------------
# CACHING CONFIGURATION
# -----------------------------------------------------------------------------

# Enable/disable caching
CACHE_ENABLED=true

# Cache TTL in seconds (default: 1 hour)
CACHE_TTL_SECONDS=3600

# Redis URL for distributed caching (optional)
# If not set, will use in-memory cache
# Format: redis://username:password@hostname:port/database
# REDIS_URL=redis://localhost:6379/0

# -----------------------------------------------------------------------------
# AI/OPENAI SETTINGS
# -----------------------------------------------------------------------------

# OpenAI model for thumbnail analysis
OPENAI_MODEL=gpt-4-vision-preview

# OpenAI request timeout (seconds)
OPENAI_TIMEOUT=30

# Maximum tokens for OpenAI responses
OPENAI_MAX_TOKENS=1000

# Default language for analysis (en, id)
DEFAULT_LANGUAGE=en

# -----------------------------------------------------------------------------
# LOGGING CONFIGURATION
# -----------------------------------------------------------------------------

# Log level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# Enable request logging
LOG_REQUESTS=true

# Enable metrics collection
ENABLE_METRICS=true

# -----------------------------------------------------------------------------
# SECURITY SETTINGS
# -----------------------------------------------------------------------------

# Allowed origins for CORS (comma-separated)
# Use * for development, specific domains for production
ALLOWED_ORIGINS=*

# Enable API key validation
REQUIRE_API_KEY=true

# -----------------------------------------------------------------------------
# OPTIONAL FEATURES
# -----------------------------------------------------------------------------

# Enable thumbnail analysis by default
DEFAULT_INCLUDE_THUMBNAIL_ANALYSIS=true

# Enable parallel processing for batch requests
DEFAULT_PARALLEL_PROCESSING=true

# Health check interval (seconds)
HEALTH_CHECK_INTERVAL=300